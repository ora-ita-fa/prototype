// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the 
//          version in your base theme's directory, 
//          for example alta/widgets/_oj.alta.formcontrol.inputnumber.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


@import "../../utilities/oj.utilities";
@import "oj.common.formcontrol.mixins";


@if $includeInputNumberClasses != false {
  @include exports("common.inputnumber") {

    /* inputnumber */
    /* --------------------------------------------------------------- */
    
    /* Root dom element for inputnumber. 
     It wraps the input and the up/down buttons */
    .oj-inputnumber { 
      // do not allow the buttons to wrap to the next line
      white-space: nowrap;

      // We need to support a few sizing use cases: 
      // * width on root dom element should be the width of input and buttons.
      // * width on input should be the width of the input, and the buttons come after.
      // To support both these uses cases, we need to use 
      // display: inline-table; (inline-table is needed as opposed
      // to table so that labels can be inlined)
      // TODO: When browsers support flexbox styles, we should change this to 
      // use flexbox so that the input grows, and the buttons stay a set width 
      // and are  always 'end' aligned. We should be able to switch to
      // flexbox styles without changing the dom.
      display: inline-table;
        
      /* use a width of 100% and then max and min width so that when 
         there's less room for the form control it can automatically 
         get smaller instead of overflowing its boundaries */
      max-width: $formControlMediumMaxWidth;
      min-width: $formControlMinWidth;
      width: 100%;
      
      // font size needs to be on the root, because max/min width is in em.
      font-size: $fontSize;
    }

    /* Input field for inputnumber */
    .oj-inputnumber-input { 
      @include oj-form-control-content;
      @include oj-normalize-text-input;  
      // we override border-radius that is in the oj-form-control-content.
      // For inputnumber, we want the radius only on the 'start' of the input
      // not the end. After the 'end' comes the up/down buttons, so we don't
      // want a curved edge next to the up/down buttons
      @include oj-ltr {
        @include oj-border-radius($formControlBorderRadius) {
          border-radius: $formControlBorderRadius 0 0 $formControlBorderRadius;
        }
      }
      @include oj-rtl {
        @include oj-border-radius($formControlBorderRadius) {
          border-radius: 0 $formControlBorderRadius $formControlBorderRadius 0;
        }
      }
      @include oj-box-sizing-property(border-box);
      padding: 0 $formControlPadding; 
      height: $formControlHeight;
      width: 100%;
      display: table-cell;
      
      @include oj-placeholder()
      {
        color: $formControlPlaceholderColor;
      }
    }

    /* Invalid styling for the widget */
    .oj-inputnumber.oj-invalid .oj-inputnumber-input {
      border: $formControlMessagingBorderWidth solid $borderColorError;
    }

    /* Warning styling for the widget */
    .oj-inputnumber.oj-warning .oj-inputnumber-input {
      border: $formControlMessagingBorderWidth solid $borderColorWarning;
    }

    /* Disabled styling for the widget */
    .oj-inputnumber.oj-disabled .oj-inputnumber-input {
      @include oj-form-control-content-disabled;
    }
    
    /* readonly styling for the widget */
    .oj-inputnumber.oj-read-only .oj-inputnumber-input {
      @include oj-form-control-content-readonly;
      padding: 0;
    }
    
    // hide buttons when in readonly mode
    .oj-inputnumber.oj-read-only .oj-inputnumber-button {
      display: none;
    }

    /* Up/Down button styling */
    .oj-inputnumber.oj-disabled .oj-inputnumber-button.oj-button {
      border-color: $formControlBorderColorDisabled;
    }

    /* Styling for the container of the button */
    .oj-inputnumber-button { 
      display: table-cell;
      // by setting width to 1 the buttons are only as big as they need to be
      // even when the input number max width is set to 100%
      width:1px;
      @include oj-box-sizing-property(border-box);
    }

    /* more specificity is required here to overide default button borders */
    .oj-inputnumber-button.oj-button { 
      border-color: $formControlBorderColor;
      // line-height is needed so the button size matches the input. inputs
      // have this style on them.
      line-height: normal;

      @include oj-ltr() {
        border-left: none;
      }
      @include oj-rtl() {
        border-right: none;
      } 
    }
    
    // according to the alta spec, the up button is before the down button
    // in the layout. The up button should have no border-radius. The 
    // down ('end') button should have an 'end' border-radius.
    .oj-inputnumber-up.oj-button { 
      border-radius: 0;
    }

    .oj-inputnumber-down.oj-button { 
      @include oj-ltr() {
        border-radius: 0 $formControlBorderRadius $formControlBorderRadius 0;
      }
      @include oj-rtl() {
        border-radius: $formControlBorderRadius 0 0 $formControlBorderRadius;
      }   
    }

    .oj-inputnumber .oj-inputnumber-up-icon,
    .oj-inputnumber .oj-inputnumber-down-icon {
      font-size: 1rem;
      margin-bottom: 0;
    }

  }
}