// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the 
//          version in your base theme's directory, 
//          for example alta/widgets/_oj.alta.formcontrol.inputdatetime.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../utilities/oj.utilities";
@import "oj.common.formcontrol.mixins";

@if $includeInputDateTimeClasses != false {
  @include exports("common.inputdatetime") {

    /* Class placed on the widget, distinguishes one type to an another */
    .oj-inputdatetime-date-time,
    .oj-inputdatetime-date-only,
    .oj-inputdatetime-time-only
    { 
    }

    // Class that wraps the input element and trigger icons. Need a separate one due to inline mode.
    .oj-inputdatetime-input-container
    {
      @include oj-box-sizing-property(border-box);
      display: inline-table;

      /* use a width of 100% and then max and min width so that when 
         there's less room for the form control it can automatically 
         get smaller instead of overflowing its boundaries */
      max-width: $formControlMediumMaxWidth;
      min-width: $formControlMinWidth;
      width: 100%;

      // because max/min width is in em the font size needs to be on this element 
      // and not on the selector that goes on the input.
      font-size: $fontSize;
    }
	
    //actual input element
    .oj-inputdatetime-input
    {
      @include oj-form-control-content;
      @include oj-box-sizing-property(border-box);
      display: table-cell;
      font-family: inherit;
      font-weight: normal;
      padding: 0 $formControlPadding; 
      height: $formControlHeight;
      width: 100%;
    }
	
    //A marker class of whether the input has a trigger or not.
    //Component's input does not have a trigger when showOn option is of focus and otherwise yes.
    .oj-inputdatetime-input.oj-has-trigger
    {
      @include oj-border-radius($formControlBorderRadius 0 0 $formControlBorderRadius, $textDirection: ltr); 
      @include oj-border-radius(0 $formControlBorderRadius $formControlBorderRadius 0, $textDirection: rtl); 
      @include oj-ltr()
      {
        //need to disable right border if trigger exists
        border-width: $formControlBorderWidth 0 $formControlBorderWidth $formControlBorderWidth; 
      }

      @include oj-rtl()
      {
        //need to disable left border if trigger exists
        border-width: $formControlBorderWidth $formControlBorderWidth $formControlBorderWidth 0; 
      }
    }
	
    //Trigger contains the calendar-icon + time-icon
    .oj-inputdatetime-input-trigger 
    {
      @include oj-box-sizing-property(border-box);
      border: $formControlBorderWidth solid $formControlBorderColor;
      display: table-cell;
      background-color: $formControlBgColor;
      height: $formControlHeight;
      padding: 0 3px;
      vertical-align: middle;
      white-space: nowrap;
      // by setting width to 1 the cell is only as big as it needs to be
      // even when the input date max width is set to 100%
      width: 1px;
      @include oj-border-radius(0 $formControlBorderRadius $formControlBorderRadius 0, $textDirection: ltr); 
      @include oj-border-radius($formControlBorderRadius 0 0 $formControlBorderRadius, $textDirection: rtl); 

      @include oj-ltr()
      {
        border-width: $formControlBorderWidth $formControlBorderWidth $formControlBorderWidth 0; //disable left border
      }

      @include oj-rtl()
      {
        border-width: $formControlBorderWidth 0 $formControlBorderWidth $formControlBorderWidth;
      }
    }
    
    //oj-invalid
    //Change border color + width when is invalid.
    .oj-inputdatetime-input-container.oj-invalid .oj-inputdatetime-input
    {
      border-color: $borderColorError;
      border-width: $formControlMessagingBorderWidth;
    }
	
    //note need to ONLY when it has a trigger
    .oj-inputdatetime-input-container.oj-invalid .oj-inputdatetime-input.oj-has-trigger,
	.oj-inputdatetime-input-container.oj-warning .oj-inputdatetime-input.oj-has-trigger
    {
      @include oj-ltr()
      {
        border-width: $formControlMessagingBorderWidth 0 $formControlMessagingBorderWidth $formControlMessagingBorderWidth;
      }

      @include oj-rtl()
      {
        border-width: $formControlMessagingBorderWidth $formControlMessagingBorderWidth $formControlMessagingBorderWidth 0;
      }
    }
	
    //change the width when invalid
    .oj-inputdatetime-input-container.oj-invalid .oj-inputdatetime-input-trigger
    {
      border-color: $borderColorError;
      @include oj-ltr()
      {
        border-width: $formControlMessagingBorderWidth $formControlMessagingBorderWidth $formControlMessagingBorderWidth 0;
      }

      @include oj-rtl()
      {
        border-width: $formControlMessagingBorderWidth 0 $formControlMessagingBorderWidth $formControlMessagingBorderWidth;
      }
    }
	
	//oj-warning
    //Change border color + width when is warning.
    .oj-inputdatetime-input-container.oj-warning .oj-inputdatetime-input
    {
      border-color: $borderColorWarning;
      border-width: $formControlMessagingBorderWidth;
    }
	
    //change the width when warning
    .oj-inputdatetime-input-container.oj-warning .oj-inputdatetime-input-trigger
    {
      border-color: $borderColorWarning;
      @include oj-ltr()
      {
        border-width: $formControlMessagingBorderWidth $formControlMessagingBorderWidth $formControlMessagingBorderWidth 0;
      }

      @include oj-rtl()
      {
        border-width: $formControlMessagingBorderWidth 0 $formControlMessagingBorderWidth $formControlMessagingBorderWidth;
      }
    }
	
    //oj-disabled
    .oj-inputdatetime-date-time.oj-disabled .oj-inputdatetime-input,
	.oj-inputdatetime-date-only.oj-disabled .oj-inputdatetime-input,
	.oj-inputdatetime-time-only.oj-disabled .oj-inputdatetime-input
    {
      @include oj-form-control-content-disabled;
    }
    .oj-inputdatetime-date-time.oj-disabled .oj-inputdatetime-input-trigger,
	.oj-inputdatetime-date-only.oj-disabled .oj-inputdatetime-input-trigger,
	.oj-inputdatetime-time-only.oj-disabled .oj-inputdatetime-input-trigger
    {
      background-color: $formControlBgColorDisabled;
      border-color: $formControlBorderColorDisabled;
    }    
	
    //oj-read-only
    .oj-inputdatetime-input-container.oj-read-only,
    .oj-inputdatetime-input-container.oj-read-only .oj-inputdatetime-input
    {
      @include oj-form-control-content-readonly;
	  padding: 0;
    }

    // Hide when is of read-only
    .oj-inputdatetime-input-container.oj-read-only .oj-inputdatetime-input-trigger
    {
      display: none;
    }

    //Note that this margin will be placed ONLY when is of datetime, meaning not w/ date as no separation is needed from time icon
    .oj-inputdatetime-date-time .oj-datepicker-calendar-icon
    {
      @include oj-ltr()
      {
        margin-right: 5px;
      }
      @include oj-rtl()
      {
        margin-left: 5px;
      }
    }
    .oj-datepicker-calendar-icon,
    .oj-datepicker-time-icon 
    { 
      display: inline-block;
      vertical-align: middle;
    }
    .oj-datepicker-calendar-icon:before 
    {
      @extend .oj-fwk-icon-calendar:before;
    }

    .oj-datepicker-calendar-icon.oj-disabled,
    .oj-datepicker-time-icon.oj-disabled
    {
      background-color: $formControlBgColorDisabled;
      cursor: default;
    }

    .oj-datepicker-time-icon:before 
    {
      @extend .oj-fwk-icon-clock:before;
    }
  }
}